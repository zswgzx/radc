function idx = plotChi2stats()

%% Initialize variables.
filename = 'subjsAll';
delimiter = '';

%% Format string for each line of text:
%   column1: text (%s)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter,  'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Allocate imported array to column variable names
subjects = dataArray{:, 1};

%% Clear temporary variables
clearvars filename delimiter formatSpec fileID dataArray ans;

%% main
nSubject=size(subjects);nSubject=nSubject(1);
thr=0.0095;
meanChisq=importfile('nonzero-meanchi2');
idx=find(meanChisq > thr);

plot(1:nSubject,meanChisq,'.',1:nSubject,thr*ones(nSubject,1),'r--');

n50=floor(nSubject/50);
xticks=50*(1:n50);
xticklabs=cell(1,n50*5+floor(mod(nSubject,50)/10));
for i=1:n50
    xticklabs{5*i}=num2str(xticks(i));
end

axis tight
xlabel('subjects');
ylabel('chisq value');
title('mean chi-square value in brain tissue across subjects');
set(gca,'XGrid','on','XTick',10:10:nSubject,'XTickLabel',xticklabs);

set(gcf,'PaperPositionMode','auto','units','normalized','outerposition',[0 0 1 1]) % preserve the image aspect ratio when printing, maximize figure window
print('-dtiff','-r0','nonzero-meanchi2') % save figure as tiff, use screen resolution

end

function floatdata = importfile(filename, startRow, endRow)
    %IMPORTFILE Import numeric data from a text file as column vectors.
    %   CHISQ = IMPORTFILE(FILENAME) Reads data from text file FILENAME for the
    %   default selection.
    %
    %   CHISQ = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows
    %   STARTROW through ENDROW of text file FILENAME.
    %
    % Example:
    %   chisq = importfile('test.txt',1, 296025);
    %
    %    See also TEXTSCAN.

    % Auto-generated by MATLAB on 2013/10/25 16:51:04

    %% Initialize variables.
    delimiter = '';
    if nargin<=2
        startRow = 1;
        endRow = inf;
    end

    %% Format string for each line of text:
    %   column1: double (%f)
    % For more information, see the TEXTSCAN documentation.
    formatSpec = '%f%[^\n\r]';

    %% Open the text file.
    fileID = fopen(filename,'r');

    %% Read columns of data according to format string.
    % This call is based on the structure of the file used to generate this
    % code. If an error occurs for a different file, try regenerating the code
    % from the Import Tool.
    dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
    for block=2:length(startRow)
        frewind(fileID);
        dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
        dataArray{1} = [dataArray{1};dataArrayBlock{1}];
    end

    %% Close the text file.
    fclose(fileID);

    %% Post processing for unimportable data.
    % No unimportable data rules were applied during the import, so no post
    % processing code is included. To generate code which works for
    % unimportable data, select unimportable cells in a file and regenerate the
    % script.

    %% Allocate imported array to column variable names
    floatdata = dataArray{:, 1};
end
